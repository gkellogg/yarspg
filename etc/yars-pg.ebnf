[1]   yarspg  ::= statement*
[2]   statement ::= node | edge | prefix_directive | metadata | node_schema | edge_schema | section
[3]   prefix_directive  ::= ('::' | pname) IRI
[4]   pname ::= ":" ALNUM_PLUS ":"
[5]   pn_local  ::= ALNUM_PLUS
[6]   metadata  ::= "-" ((pn_local pname) | (IRI ":")) (STRING | IRI)
[6a]  graph_name ::= STRING
[7]   annotation  ::= string_annotation | rdf_annotation
[8]   string_annotation ::= STRING ":" STRING
[9]   rdf_annotation  ::= ((pn_local pname) | (IRI ":")) (STRING | IRI)
[10]  annotations_list  ::= "+" annotation ("," annotation)*
[11]  props_list  ::= "[" prop ("," prop)* "]"
[12]  graphs_list ::= "/" graph_name ("," graph_name)* "/"
[13]  node  ::= "<" node_id ">" ("{" node_label ("," node_label)* "}")? props_list? graphs_list? annotations_list?
[14]  edge  ::= directed | undirected
[15]  section ::= "%" SECTION_NAME
[16]  directed  ::= "(" node_id ")" "-" ("<" edge_id ">")? "{" edge_label "}" props_list? "->" "(" node_id ")" graphs_list? annotations_list?
[17]  undirected  ::= "(" node_id ")" "-" ("<" edge_id ">")? "{" edge_label "}" props_list? "-" "(" node_id ")" graphs_list? annotations_list?
[18]  node_id ::= STRING
[19]  node_label  ::= STRING
[20]  prop  ::= key ":" value
[21]  edge_id ::= STRING
[22]  edge_label  ::= STRING
[23]  key ::= STRING
[24]  value ::= primitive_value | complex_value
[25]  primitive_value ::= STRING | DATETYPE | NUMBER | BOOL | "null"
[26]  complex_value ::= set | list | struct
[27]  set ::= "{" (primitive_value | set) ("," (primitive_value | set))* "}"
[28]  list  ::= "[" (primitive_value | list) ("," (primitive_value | list))* "]"
[29]  struct  ::= "{" key ":" (primitive_value | struct) ("," key ":" (primitive_value | struct))* "}"
[30]  node_schema ::= "S" ("{" node_label ("," node_label)* "}") props_list_schema? graphs_list? annotations_list?
[31]  props_list_schema ::= "[" prop_schema ("," prop_schema)* "]"
[32]  prop_schema ::= key ":" value_schema
[33]  value_schema  ::= primitive_value_schema | complex_value_schema
[34]  primitive_value_schema  ::= "Decimal" | "SmallInt" | "Integer" | "BigInt" | "Float" | "Real" | "Double" | "Bool" | "Null" | "String" | "Date" | "Timestamp" | "Time"
[35]  complex_value_schema  ::= set_schema | list_schema | struct_schema
[36]  set_schema  ::= "Set" "(" (primitive_value_schema | set_schema) ")"
[37]  list_schema ::= "List" "(" (primitive_value_schema | list_schema) ")"
[38]  struct_schema ::= "Struct" "(" (primitive_value_schema | struct_schema) ")"
[39]  edge_schema ::= directed_schema | undirected_schema
[40]  directed_schema ::= "S" ("(" node_label ")")? "-" "{" edge_label "}" props_list_schema? "->" ("(" node_label ")")?
[41]  undirected_schema ::= "S" ("(" node_label ")")? "-" "{" edge_label "}" props_list_schema? "-" ("(" node_label ")")?
[42]  SECTION_NAME  ::= "METADATA" | "NODE SCHEMAS" | "EDGE SCHEMAS" | "NODES" | "EDGES"
[43]  COMMENT ::= "#" ([^#xd#xa#xc])*
[44]  STRING  ::= STRING_LITERAL_QUOTE
[45]  NUMBER  ::= SIGN? ([0-9])+ "."? ([0-9])*
[46]  BOOL  ::= "true" | "false"
[47]  STRING_LITERAL_QUOTE  ::= '"' ([^"#xd#xa] | "'" | '"')* '"'
[48]  ALNUM_PLUS  ::= PN_CHARS_BASE ((PN_CHARS | ".")* PN_CHARS)?
[49]  IRI ::= "<" (PN_CHARS | "." | ":" | "/" | "\" | "#" | "@" | "%" | "&" | UCHAR)* ">"
[50]  PN_CHARS  ::= PN_CHARS_U | [-0-9#xB7#x0300-#x036F#x203F-#x2040]
[51]  PN_CHARS_U  ::= PN_CHARS_BASE | "_"
[52]  DATETYPE  ::= TIMESTAMP | DATE | TIME
[53]  DATE  ::= [0-9] [0-9] [0-9] [0-9] "-" [0-9] [0-9] "-" [0-9] [0-9]
[54]  TIME  ::= [0-9] [0-9] ":" [0-9] [0-9] ":" [0-9] [0-9] TIMEZONE?
[55]  TIMEZONE  ::= SIGN? [0-9] [0-9] ":" [0-9] [0-9]
[56]  TIMESTAMP ::= DATE "T" TIME
[57]  SIGN  ::= "+" | "-"
[58]  UCHAR ::= ("u" | "U" HEX HEX HEX HEX) HEX HEX HEX HEX
[59]  PN_CHARS_BASE ::= [A-Za-z0-9#xC0-#xD6#xD8-#xF6#xF8-#x2FF#x370-#x37D#x37F-#x1FFF#x200C-#x200D#x2070-#x218F#x2C00-#x2FEF#x3001-#xD7FF#xF900-#xFDCF#xFDF0-#xFFFD]
[60]  HEX ::= [0-9A-Fa-f]
[61]  WS  ::= ([#x20#x9#xa] | COMMENT)+
